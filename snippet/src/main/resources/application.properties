spring.application.name=snippet
spring.datasource.url=${env.POSTGRES_DB_HOST_URL}
spring.datasource.username=${env.POSTGRES_DB_USER}
spring.datasource.password=${env.POSTGRES_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connectionTimeout=60000
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator
spring.dotenv.enabled=true
jwt.secret=${env.JWT_SECRET}
aes.secret=${env.AES_SECRET_KEY}

# Auth0 OAuth2 Configuration
spring.security.oauth2.client.registration.auth0.client-id=${env.AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${env.AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code

# Auth0 Authorization Provider Configuration
spring.security.oauth2.client.provider.auth0.authorization-uri=https://dev-xs1he8u57hw3u4pl.us.auth0.com/authorize
spring.security.oauth2.client.provider.auth0.token-uri=https://dev-xs1he8u57hw3u4pl.us.auth0.com/oauth/token
spring.security.oauth2.client.provider.auth0.user-info-uri=https://dev-xs1he8u57hw3u4pl.us.auth0.com/userinfo

# Redirect and logout URLs
spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:8080/login/oauth2/code/auth0
spring.security.oauth2.client.registration.auth0.logout-success-url=http://localhost:8080/
spring.security.oauth2.client.registration.auth0.login-success-url=/users
spring.security.oauth2.client.registration.auth0.logout-url=/logout
